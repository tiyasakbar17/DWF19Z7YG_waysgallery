[{"D:\\AAKerjaaa\\webserver\\finaltask\\src\\index.js":"1","D:\\AAKerjaaa\\webserver\\finaltask\\src\\reportWebVitals.js":"2","D:\\AAKerjaaa\\webserver\\finaltask\\src\\App.js":"3","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\routerLogin\\UserRouter.jsx":"4","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\store\\index.jsx":"5","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Auth.jsx":"6","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\index.jsx":"7","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Auth.jsx":"8","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Landing\\Login.jsx":"9","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Landing\\Register.jsx":"10","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\setAuthToken.jsx":"11","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Header.jsx":"12","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Posts.jsx":"13","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Posts.jsx":"14","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\PopUp.jsx":"15","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Home\\Card.jsx":"16","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\PopUp.jsx":"17","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Hired.jsx":"18","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Order\\Table.jsx":"19","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Dropdown.jsx":"20","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Hired.jsx":"21","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\PopUps.jsx":"22","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\Loading.jsx":"23","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\ProgressBar.jsx":"24","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Posts\\AddPost.jsx":"25","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Landing\\Landing.jsx":"26","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Posts\\DetailPost.jsx":"27","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Hired\\Hired.jsx":"28","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Hired\\Projects\\AddProject.jsx":"29","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Home\\Home.jsx":"30","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\User\\EditProfile.jsx":"31","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\User\\Profile.jsx":"32","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Hired\\Projects\\Project.jsx":"33","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Order\\Order.jsx":"34","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Order\\DetailOrder.jsx":"35"},{"size":500,"mtime":1608340975799,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":2048,"mtime":1608434756770,"results":"39","hashOfConfig":"37"},{"size":682,"mtime":1608303835219,"results":"40","hashOfConfig":"37"},{"size":394,"mtime":1608010852033,"results":"41","hashOfConfig":"37"},{"size":3642,"mtime":1608570835876,"results":"42","hashOfConfig":"37"},{"size":254,"mtime":1608211661372,"results":"43","hashOfConfig":"37"},{"size":1204,"mtime":1608394494486,"results":"44","hashOfConfig":"37"},{"size":2192,"mtime":1608353687511,"results":"45","hashOfConfig":"37"},{"size":2485,"mtime":1608382448335,"results":"46","hashOfConfig":"37"},{"size":266,"mtime":1608017274759,"results":"47","hashOfConfig":"37"},{"size":2057,"mtime":1608542175607,"results":"48","hashOfConfig":"37"},{"size":2747,"mtime":1608570856554,"results":"49","hashOfConfig":"37"},{"size":763,"mtime":1608350435991,"results":"50","hashOfConfig":"37"},{"size":1054,"mtime":1608302277194,"results":"51","hashOfConfig":"37"},{"size":420,"mtime":1608542273997,"results":"52","hashOfConfig":"37"},{"size":584,"mtime":1608301299469,"results":"53","hashOfConfig":"37"},{"size":2415,"mtime":1608570849693,"results":"54","hashOfConfig":"37"},{"size":3959,"mtime":1608491732303,"results":"55","hashOfConfig":"37"},{"size":1538,"mtime":1608307503527,"results":"56","hashOfConfig":"37"},{"size":875,"mtime":1608229369132,"results":"57","hashOfConfig":"37"},{"size":891,"mtime":1608353704389,"results":"58","hashOfConfig":"37"},{"size":829,"mtime":1608302265810,"results":"59","hashOfConfig":"37"},{"size":1736,"mtime":1608301633359,"results":"60","hashOfConfig":"37"},{"size":4348,"mtime":1608435341205,"results":"61","hashOfConfig":"37"},{"size":2790,"mtime":1608434723148,"results":"62","hashOfConfig":"37"},{"size":7326,"mtime":1608542341346,"results":"63","hashOfConfig":"37"},{"size":2849,"mtime":1608542018117,"results":"64","hashOfConfig":"37"},{"size":4151,"mtime":1608435874445,"results":"65","hashOfConfig":"37"},{"size":3879,"mtime":1608479908609,"results":"66","hashOfConfig":"37"},{"size":5014,"mtime":1608571692984,"results":"67","hashOfConfig":"37"},{"size":5828,"mtime":1608542250020,"results":"68","hashOfConfig":"37"},{"size":2604,"mtime":1608542068249,"results":"69","hashOfConfig":"37"},{"size":3531,"mtime":1608483572084,"results":"70","hashOfConfig":"37"},{"size":1773,"mtime":1608541991912,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1e88b4s",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"D:\\AAKerjaaa\\webserver\\finaltask\\src\\index.js",[],["157","158"],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\reportWebVitals.js",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\App.js",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\routerLogin\\UserRouter.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\store\\index.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Auth.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\index.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Auth.jsx",["159"],"const innitialState = {\r\n    isLogin: false,\r\n    userData: null,\r\n    token: null,\r\n    loading: true,\r\n    user: null,\r\n};\r\n\r\nconst Auth = (state = innitialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case \"LOAD_DATA\": {\r\n            return {\r\n                ...state,\r\n                userData: payload,\r\n                isLogin: true,\r\n                loading: false\r\n            }\r\n        }\r\n        case \"LOGIN\":\r\n            localStorage.setItem(\"token\", payload.token);\r\n            return {\r\n                ...state,\r\n                token: payload.token\r\n            }\r\n        case \"REGISTER\":\r\n            localStorage.setItem(\"token\", payload);\r\n            return {\r\n                ...state,\r\n                token: payload\r\n            }\r\n        case \"GET_USER\":\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case \"LOGOUT\":\r\n            localStorage.removeItem(\"token\");\r\n        case \"AUTH_ERROR\":\r\n            return {\r\n                ...innitialState,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Auth;","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Landing\\Login.jsx",["160"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { userLogin } from '../../redux/actions/Auth';\r\n\r\nfunction Login({ onClick, userLogin, changeShow }) {\r\n\r\n    const innitialValue = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const [state, setState] = React.useState(innitialValue)\r\n\r\n    const changeHandler = (e) => {\r\n        setState(prevState => ({ ...prevState, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        userLogin(state);\r\n        onClick()\r\n    }\r\n\r\n    return (\r\n        <div className=\"landingPop\" >\r\n            <div className=\"modalBackground\" onClick={onClick}></div>\r\n            <div className=\"modalContainer\">\r\n                <div className=\"modalCloser pointer\" onClick={onClick}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </div>\r\n                <div className=\"modalTitle\">\r\n                    <span><strong>Login</strong></span>\r\n                </div>\r\n                <div className=\"formContainer\">\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"email\" className=\"input\" name=\"email\" value={state.email} placeholder=\"Email\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"password\" className=\"input\" name=\"password\" value={state.password} placeholder=\"Password\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <button type=\"submit\" className=\"white primary button pointer\">Login</button>\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <span>Dont Have an account ? <a onClick={changeShow} className=\"pointer\"><strong>Click Here</strong></a></span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { userLogin })(Login)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Landing\\Register.jsx",["161"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { userRegister } from '../../redux/actions/Auth';\r\n\r\nfunction Login({ onClick, userRegister, changeShow }) {\r\n\r\n    const innitialValue = {\r\n        email: '',\r\n        password: '',\r\n        fullName: ''\r\n    }\r\n\r\n    const [state, setState] = React.useState(innitialValue)\r\n\r\n    const changeHandler = (e) => {\r\n        setState(prevState => ({ ...prevState, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        userRegister(state);\r\n        onClick()\r\n    }\r\n\r\n    return (\r\n        <div className=\"landingPop\" >\r\n            <div className=\"modalBackground\" onClick={onClick}></div>\r\n            <div className=\"modalContainer\">\r\n                <div className=\"modalCloser pointer\" onClick={onClick}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </div>\r\n                <div className=\"modalTitle\">\r\n                    <span><strong>Register</strong></span>\r\n                </div>\r\n                <div className=\"formContainer\">\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"email\" className=\"input\" name=\"email\" value={state.email} placeholder=\"Email\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"password\" className=\"input\" name=\"password\" value={state.password} placeholder=\"Password\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"text\" className=\"input\" name=\"fullName\" value={state.fullName} placeholder=\"Full Name\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <button type=\"submit\" className=\"white primary button pointer\">Login</button>\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <span>Already Have an account ? <a onClick={changeShow} className=\"pointer\"><strong>Click Here</strong></a></span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { userRegister })(Login)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\setAuthToken.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Header.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Posts.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Posts.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\PopUp.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Home\\Card.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\PopUp.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Hired.jsx",["162"],"const { default: Axios } = require(\"axios\");\r\nconst { showPopUp, showProgress, showLoading, closeLoading } = require(\"./PopUp\")\r\n\r\nconst configJson = {\r\n    headers: {\r\n        \"Content-type\": \"application/json\",\r\n    },\r\n};\r\nconst configForm = (dispatch) => ({\r\n    headers: {\r\n        \"Content-type\": \"multipart/form-data\",\r\n    },\r\n    onUploadProgress: (ProgressEvent) => {\r\n        let percentage = Math.round(\r\n            (ProgressEvent.loaded * 100) / ProgressEvent.total\r\n        );\r\n        dispatch(showProgress(percentage));\r\n    },\r\n});\r\nconst baseUrl = 'https://finaltask-tiyas.herokuapp.com/api/v1'\r\n\r\nexport const loadAllOrders = (data) => async dispatch => {\r\n    try {\r\n        dispatch(showLoading())\r\n        const result = await Axios.get(`${baseUrl}/hired`, configJson)\r\n        dispatch({\r\n            type: \"LOAD_ALL_ORDER\",\r\n            payload: result.data.data.orders\r\n        })\r\n        dispatch({\r\n            type: \"LOAD_ORDER\",\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: \"LOAD_HIRE\",\r\n            payload: data\r\n        })\r\n        dispatch(closeLoading())\r\n    } catch (error) {\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(error.response.data.message))\r\n    }\r\n}\r\nexport const addHired = (data) => async dispatch => {\r\n    try {\r\n        dispatch(showLoading())\r\n        const result = await Axios.post(`${baseUrl}/hired`, data, configJson)\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(\"We have sent your offer, please wait for the user to accept it\"))\r\n    } catch (error) {\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(error.response.data.message))\r\n    }\r\n}\r\nexport const hiredAction = (data, id) => async dispatch => {\r\n    try {\r\n        dispatch(showLoading())\r\n        const result = await Axios.patch(`${baseUrl}/hired`, data, configJson)\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(result.data.message))\r\n        dispatch(loadAllOrders(id))\r\n    } catch (error) {\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(error.response.data.message))\r\n    }\r\n}\r\nexport const submitProject = (data) => async dispatch => {\r\n    try {\r\n        const result = await Axios.post(`${baseUrl}/project`, data, configForm(dispatch))\r\n        dispatch(showPopUp(result.data.message))\r\n    } catch (error) {\r\n        dispatch(showPopUp(error.response.data.message))\r\n    }\r\n}","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Order\\Table.jsx",["163"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { hiredAction } from '../../redux/actions/Hired'\r\nimport DetailOrder from './DetailOrder'\r\n\r\nfunction Table({ userId, user, counter, hiredAction }) {\r\n\r\n    const [state, setState] = React.useState(false)\r\n\r\n    var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    const history = useHistory();\r\n\r\n    const approveHandler = () => {\r\n        const data = {\r\n            id: user.id,\r\n            status: true\r\n        }\r\n        hiredAction(data, userId)\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        const data = {\r\n            id: user.id,\r\n            status: false\r\n        }\r\n        hiredAction(data, userId)\r\n    }\r\n    const pushAddProject = () => {\r\n        history.push(`/addProject/${user.id}`)\r\n    }\r\n\r\n    const Offers = () => {\r\n        return (\r\n            <td className=\"actionItems\">\r\n                {\r\n                    user.status === null ?\r\n                        <button onClick={approveHandler} className=\"button buttonTable pointer\">\r\n                            Approve\r\n                    </button> :\r\n                        user.status === true && !user.project ?\r\n                            <button onClick={pushAddProject} className=\"button buttonTable pointer\">\r\n                                Send Project\r\n                    </button> :\r\n                            <div className=\"success rounded\"></div>\r\n                }\r\n                {\r\n                    user.status !== false && user.project === null ?\r\n                        <button onClick={cancelHandler} className=\"button buttonTable2 pointer danger\">\r\n                            Cancel\r\n                        </button> :\r\n                        null\r\n                }\r\n            </td>\r\n        )\r\n    }\r\n    const Orders = () => {\r\n        return (\r\n            <td className=\"actionItems\">\r\n                {(user.status === null) ?\r\n                    (<span className=\"warning rounded\"></span>) :\r\n                    (user.status === false ?\r\n                        (<span className=\"danger rounded\"></span>) :\r\n                        (user.project ?\r\n                            (<button onClick={() => history.push(`/project/${user.id}`)} className=\"button pointer buttonTable\">View Project</button>) :\r\n                            (<span className=\"success rounded\"></span>)))}\r\n            </td>\r\n        )\r\n    }\r\n\r\n    const showDetails = () => {\r\n        setState(prevState => (!prevState))\r\n    }\r\n\r\n    const properties = {\r\n        show: userId === user.orderBy ? true : false,\r\n        title: user.title,\r\n        description: user.description,\r\n        price: user.price,\r\n        approve: approveHandler,\r\n        cancel: cancelHandler,\r\n        closer: showDetails\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {state ? <DetailOrder {...properties} /> : null}\r\n            <tr>\r\n                <th className=\"tableNumber\">{counter}</th>\r\n                <td>{userId === user.orderBy ? user.hires.fullName : user.offers.fullName}</td>\r\n                <td><a className=\"pointer\" onClick={showDetails}>{user.title}</a></td>\r\n                <td>{new Date(user.startDate).toLocaleDateString(\"id-ID\", options)}</td>\r\n                <td>{new Date(user.endDate).toLocaleDateString(\"id-ID\", options)}</td>\r\n                <td>\r\n                    {user.status ?\r\n                        (!user.project ? <span className=\"text-success\">Waiting for project to send</span> : <span className=\"text-success\">Project Completed</span>) :\r\n                        (user.status === false ? <span className=\"text-danger\">Cancel</span> : <span className=\"text-warning\">Waiting Accept</span>)}\r\n                </td>\r\n                {userId === user.orderBy ? <Orders /> : <Offers />}\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(null, { hiredAction })(Table);\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Dropdown.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Hired.jsx",[],["164","165"],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\PopUps.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\Loading.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\ProgressBar.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Posts\\AddPost.jsx",["166","167"],"import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { addPost } from '../../redux/actions/Posts'\r\n\r\nexport const AddPost = ({ addPost }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const onDrop = useCallback(async acceptedFiles => {\r\n        // Do something with the files\r\n        try {\r\n            await acceptedFiles.map(file => {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    photos: [\r\n                        ...prevState.photos,\r\n                        {\r\n                            file: file,\r\n                            preview: URL.createObjectURL(file)\r\n                        }\r\n                    ]\r\n                }))\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: 'image/*' })\r\n\r\n    const innitialState = {\r\n        title: '',\r\n        description: '',\r\n        photos: [],\r\n\r\n    }\r\n    const [state, setState] = React.useState(innitialState)\r\n\r\n    const changeHandler = (e) => {\r\n\r\n        setState(prevstate => ({ ...prevstate, [e.target.name]: e.target.value }))\r\n\r\n    }\r\n\r\n    console.log(state)\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append(\"title\", state.title)\r\n        formData.append(\"description\", state.description)\r\n        state.photos.map(photo => {\r\n            formData.append(\"photos\", photo.file)\r\n        })\r\n        await addPost(formData).then(() => {\r\n            history.goBack()\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"editProfileContainer\">\r\n                    <div className=\"addPostLeft \">\r\n                        <div className=\"leftContainer\">\r\n                            <div {...getRootProps()} className=\"mainUploadField\">\r\n                                <input {...getInputProps()} />\r\n                                {\r\n                                    isDragActive ?\r\n                                        <span className=\"text-primary f-18\">Drop File Here </span> :\r\n                                        <>\r\n                                            <i className=\"text-primary fas fa-cloud-upload-alt fa-4x\"></i>\r\n                                            <span className=\"text-primary f-18\">Browse File</span>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                            <div className=\"filePreview\">\r\n                                {\r\n                                    state.photos.map((photo, i = 0) => {\r\n                                        i = i + 1;\r\n                                        return (\r\n                                            <div className=\"previewItems\" key={i}>\r\n                                                <img src={photo.preview} alt=\"preview\" className=\"image\" />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"addPostRight\">\r\n                        <input type=\"text\" name=\"title\" className=\"input inputHired\" value={state.title} onChange={changeHandler} placeholder=\"Title\" />\r\n                        <textarea name=\"description\" cols=\"30\" className=\"input textArea\" onChange={changeHandler} value={state.description} placeholder=\"Description\" ></textarea>\r\n                        <div className=\"flex justify-content-center\">\r\n                            <button type=\"submit\" className=\"text-white button primary editProfileButton\" >Post</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addPost\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Landing\\Landing.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Posts\\DetailPost.jsx",["168","169","170","171","172"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { follow } from '../../redux/actions/Auth';\r\nimport { deletePost, editPost, getPost } from '../../redux/actions/Posts';\r\n\r\nexport const DetailPost = ({ Auth, Posts, getPost, follow, deletePost, editPost }) => {\r\n\r\n    const following = async () => {\r\n        if (!Posts.post) {\r\n            return null\r\n        }\r\n        SetState(prevState => ({\r\n            ...prevState,\r\n            description: Posts.post.description,\r\n            title: Posts.post.title,\r\n        }));\r\n        const check = await Auth.userData.following.find(follow => follow.followTo === Posts.post.userId)\r\n\r\n        if (!check) {\r\n            return SetState(prevState => ({\r\n                ...prevState,\r\n                followed: 0\r\n            }))\r\n        }\r\n        SetState(prevState => ({\r\n            ...prevState,\r\n            followed: 1\r\n        }))\r\n    }\r\n\r\n    const { id } = useParams()\r\n\r\n    const history = useHistory()\r\n\r\n    const innitialValue = {\r\n        preview: '',\r\n        count: 0,\r\n        followed: 0,\r\n        edit: false,\r\n        description: '',\r\n        title: ''\r\n    }\r\n    const [state, SetState] = React.useState(innitialValue)\r\n\r\n    React.useEffect(() => {\r\n        following()\r\n    }, [Auth.userData.following, Posts.post])\r\n    React.useEffect(() => {\r\n        getPost(id)\r\n        SetState(prevState => ({ ...prevState, count: prevState.count + 1 }))\r\n    }, [])\r\n    React.useEffect(() => {\r\n        if (!Posts.loadingPost) {\r\n            SetState((prevState) => ({ ...prevState, preview: Posts.post ? Posts.post.photos[0].image : null }))\r\n        }\r\n        else {\r\n            SetState((prevState) => ({ ...prevState, count: prevState.count + 1 }))\r\n        }\r\n    }, [state.count])\r\n\r\n    const changePreview = (index) => {\r\n        const previewToBe = Posts.post.photos.findIndex(photo => photo.id === index)\r\n        SetState(prevState => ({\r\n            ...prevState,\r\n            preview: Posts.post.photos[previewToBe].image\r\n        }))\r\n    }\r\n\r\n    const editClick = () => {\r\n        SetState(prevState => ({\r\n            ...prevState,\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n    const changeHandler = e => {\r\n        SetState(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const pushUser = () => {\r\n        history.push(`/profile/${Posts.post.userId}`)\r\n    }\r\n    const pushHire = () => {\r\n        history.push(`/hired/${Posts.post.userId}`)\r\n    }\r\n\r\n    const followHandler = () => {\r\n        follow(Posts.post.userId)\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        deletePost(id).then(() => {\r\n            history.push(\"/\")\r\n        })\r\n    }\r\n    const submitHandler = () => {\r\n        editPost({\r\n            postId: id,\r\n            description: state.description,\r\n            title: state.title\r\n        })\r\n        SetState(prevState => ({\r\n            ...prevState,\r\n            edit: !prevState.edit\r\n        }))\r\n    }\r\n\r\n    if (!Posts.post) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"detailPost\">\r\n                <div className=\"upperDetailPost\">\r\n                    <div className=\"upperDetailPostLeft\">\r\n                        <div className=\"headerImage pointer\" onClick={pushUser}>\r\n                            <img src={Posts.post.createdBy.avatar ? Posts.post.createdBy.avatar : '/logo512.png'} alt=\"avatar\" className=\"image\" />\r\n                        </div>\r\n                        <div className=\"postName\">\r\n                            {\r\n                                state.edit ?\r\n                                    <input type=\"text\" name=\"title\" value={state.title} className=\"input\" style={{ width: \"200px\", height: \"30px\" }} onChange={changeHandler} /> :\r\n                                    <span className=\"f-18\"><strong>{Posts.post.title}</strong></span>\r\n                            }\r\n                            <span className=\"f-14\">{Posts.post.createdBy.fullName}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"upperDetailPostRight\">\r\n                        <div className=\"buttonPlacer\">\r\n                            {Posts.post.userId === Auth.userData.id ?\r\n                                <>\r\n                                    <div className=\"editPost\">\r\n                                        <button onClick={deleteHandler} className=\"danger text-black button pointer\" >Delete post</button>\r\n                                        <button onClick={editClick} className=\"text-black button pointer\" >Edit post</button>\r\n                                    </div>\r\n                                </> :\r\n                                <>\r\n                                    <button onClick={pushHire} className=\"text-white button pointer\">Hire</button>\r\n                                    {\r\n                                        !state.followed ?\r\n                                            <button className=\"text-black button pointer\" onClick={followHandler} >Follow</button> :\r\n                                            <button className=\"text-black button pointer\" onClick={followHandler} >Unfollow</button>\r\n                                    }\r\n                                </>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mainPostPict\" >\r\n                    <img src={state.preview} alt=\"picture\" className=\"image\" />\r\n                </div>\r\n                <div className=\"listPostPic\">\r\n                    {\r\n                        Posts.post.photos.map((photo) => {\r\n                            return (\r\n                                <div className=\"postPictSlider pointer\" onClick={() => changePreview(photo.id)} key={photo.id}>\r\n                                    <img src={photo.image} alt=\"\" className=\"image\" />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"postDetails\">\r\n                    <span className=\"text-black\"><i className=\"fas fa-hands-wash text-warning\"></i><strong>Say Hello   </strong>\r\n                        <a className=\"text-primary\">{Posts.post.createdBy.email}</a></span>\r\n                    {\r\n                        state.edit ?\r\n                            <div>\r\n                                <textarea name=\"description\" className=\"description\" value={state.description} onChange={changeHandler}></textarea>\r\n                                <button className=\"button editPost primary\" onClick={submitHandler} >Save</button>\r\n                            </div> :\r\n                            <p>{Posts.post.description}</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Posts: state.Posts,\r\n    Auth: state.Auth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getPost,\r\n    follow,\r\n    deletePost,\r\n    editPost\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPost)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Hired\\Hired.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Hired\\Projects\\AddProject.jsx",["173","174"],"import React from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { submitProject } from '../../../redux/actions/Hired'\r\n\r\nexport const AddProject = ({ submitProject }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const onDrop = React.useCallback(async acceptedFiles => {\r\n        try {\r\n            await acceptedFiles.map(file => {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    photos: [\r\n                        ...prevState.photos,\r\n                        {\r\n                            file: file,\r\n                            preview: URL.createObjectURL(file)\r\n                        }\r\n                    ]\r\n                }))\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: 'image/*' })\r\n\r\n    const { id } = useParams()\r\n\r\n    const [state, setState] = React.useState({\r\n        description: '',\r\n        photos: [],\r\n    })\r\n\r\n    const changeHandler = (e) => {\r\n        setState(prevstate => ({\r\n            ...prevstate, [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append(\"description\", state.description)\r\n        formData.append(\"hiredId\", id)\r\n        state.photos.map(photo => {\r\n            formData.append(\"photos\", photo.file)\r\n        })\r\n        await submitProject(formData).then(() => {\r\n            history.goBack()\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"editProfileContainer\">\r\n                    <div className=\"addPostLeft \">\r\n                        <div className=\"leftContainer\">\r\n                            <div {...getRootProps()} className=\"mainUploadField\">\r\n                                <input {...getInputProps()} />\r\n                                {\r\n                                    isDragActive ?\r\n                                        <span className=\"text-primary f-18\">Drop File Here </span> :\r\n                                        <>\r\n                                            <i className=\"text-primary fas fa-cloud-upload-alt fa-4x\"></i>\r\n                                            <span className=\"text-primary f-18\">Browse File</span>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                            <div className=\"filePreview\">\r\n                                {\r\n                                    state.photos.map((photo, i = 0) => {\r\n                                        i = i + 1;\r\n                                        return (\r\n                                            <div className=\"previewItems\" key={i}>\r\n                                                <img src={photo.preview} alt=\"preview\" className=\"image\" />\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"addPostRight\">\r\n                        <textarea name=\"description\" cols=\"30\" className=\"input textArea\" onChange={changeHandler} value={state.description} placeholder=\"Description\" ></textarea>\r\n                        <div className=\"flex justify-content-center\">\r\n                            <button type=\"submit\" className=\"text-white button primary editProfileButton\" >Send Project</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    submitProject\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Home\\Home.jsx",["175","176"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Card from '../../components/Home/Card'\r\nimport { getPosts } from '../../redux/actions/Posts'\r\n\r\nfunction Home({ Posts, getPosts }) {\r\n    const compare = (key) => {\r\n        return (a, b) => {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                return 0;\r\n            }\r\n            let comparison = 0;\r\n            if (a[key] < b[key]) {\r\n                comparison = 1;\r\n            }\r\n            if (a[key] > b[key]) {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        };\r\n    };\r\n\r\n    const innitialState = {\r\n        options: 'true',\r\n        search: '',\r\n        message: \"today's posts\"\r\n    }\r\n\r\n    const [state, setState] = useState(innitialState)\r\n\r\n\r\n    const changeHandler = (e) => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value,\r\n            message: (e.target.name === \"options\") ? (e.target.value === \"true\" ? \"today's posts\" : \"all posts\") : \"\"\r\n        }))\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getPosts()\r\n    }, [])\r\n\r\n    let postsToday = []\r\n    const copyPost = Posts.posts ? Posts.posts.sort(compare(\"createdAt\")).map(post => (Date.now() - new Date(post.createdAt).getTime()) < (24 * 60 * 60 * 1000) ? postsToday.push(post) : null) : null;\r\n    const allPosts = Posts.posts\r\n\r\n    const ShowToday = () => {\r\n        return (\r\n            <>\r\n                {\r\n                    postsToday.map(post => {\r\n                        return (\r\n                            <div className=\"photoContainer pointer\" key={post.id}>\r\n                                <Card image={post.photos[0].image} postId={post.id} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    const ShowAll = () => {\r\n        return (\r\n            <>\r\n                {\r\n                    allPosts.map(post => {\r\n                        return (\r\n                            <div className=\"photoContainer pointer\" key={post.id} >\r\n                                <Card image={post.photos[0].image} postId={post.id} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (!Posts.posts) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"flex\">\r\n                    <div className=\"headerPartLeft\">\r\n                        <select onChange={changeHandler} name=\"options\" className=\"postSelector\">\r\n                            <option value={true}>Today</option>\r\n                            <option value={false}>All Posts</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"headerPartRight\">\r\n                        <div className=\"searchBar flex\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                            <input type=\"text\" name=\"search\" placeholder=\"Search\" onChange={changeHandler} value={state.search} className=\"searchInput\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"middleHome\">\r\n                    <span><strong>{state.message}</strong></span>\r\n                </div>\r\n                <div className=\"postContainer\">\r\n                    {\r\n                        state.options === 'true' ? <ShowToday /> : <ShowAll />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        Posts: state.Posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Home)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\User\\EditProfile.jsx",["177","178","179"],"import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { addArts, editProfile } from '../../redux/actions/Auth'\r\n\r\nexport const EditProfile = ({ Auth, editProfile, addArts }) => {\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const onDrop = useCallback(async acceptedFiles => {\r\n        // Do something with the files\r\n        try {\r\n            const formData = new FormData();\r\n\r\n            const addform = async () => {\r\n                await acceptedFiles.map(file => {\r\n                    formData.append(\"arts\", file)\r\n                })\r\n            }\r\n            addform().then(() => addArts(formData))\r\n        } catch (error) {\r\n\r\n        }\r\n    }, [])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: 'image/*' })\r\n\r\n    const innitialState = {\r\n        art: '',\r\n        avatar: '',\r\n        greeting: '',\r\n        fullName: '',\r\n        count: 0,\r\n        preview: '',\r\n\r\n    }\r\n    const [state, setState] = React.useState(innitialState)\r\n\r\n    const changeHandler = (e) => {\r\n\r\n        setState(prevstate => ({ ...prevstate, [e.target.name]: e.target.value }))\r\n\r\n    }\r\n    const fileHandler = (e) => {\r\n\r\n        setState(prevstate => ({\r\n            ...prevstate,\r\n            [e.target.name]: e.target.files[0] ? e.target.files[0] : '',\r\n            preview: e.target.files[0] ? URL.createObjectURL(e.target.files[0]) : ''\r\n        }))\r\n\r\n    }\r\n    React.useEffect(() => {\r\n        if (!Auth.userData) {\r\n            setState(prevstate => ({ ...prevstate, fullName: Auth.userData ? Auth.userData.fullName : \"\", greeting: Auth.userData ? Auth.userData.greeting : \"\", count: prevstate.count + 1 }))\r\n        } else {\r\n            setState(prevstate => ({ ...prevstate, fullName: Auth.userData ? Auth.userData.fullName : \"\", greeting: Auth.userData ? Auth.userData.greeting : \"\" }))\r\n        }\r\n    }, [state.count])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append(\"fullName\", state.fullName)\r\n        formData.append(\"greeting\", state.greeting)\r\n        formData.append(\"avatar\", state.avatar)\r\n        editProfile(formData).then(() => {\r\n            history.goBack()\r\n        })\r\n    }\r\n\r\n    const textInput = React.createRef();\r\n\r\n    const focusTextInput = () => { textInput.current.click() }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"editProfileContainer\">\r\n                <div className=\"editLeftPart\">\r\n\r\n                    <div {...getRootProps()} className=\"fileDropper\">\r\n                        <input {...getInputProps()} />\r\n                        {\r\n                            isDragActive ?\r\n                                <span className=\"text-primary f-18\">Drop File Here </span> :\r\n                                <>\r\n                                    <span className=\"text-primary f-18\">Upload </span>\r\n                                    <span className=\"text-black f-18 ml-5\"> Your Best Art</span>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"editRightPart\">\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"profileImage\">\r\n                            <img src={state.preview ? state.preview : Auth.userData.avatar ? `${Auth.userData.avatar}` : '/logo512.png'} alt=\"Profile Pictuce\" className=\"image\" />\r\n                            <input type=\"file\" className=\"input hidden\" ref={textInput} name=\"avatar\" onChange={fileHandler} />\r\n                            <div onClick={focusTextInput} className=\"changePict pointer\">\r\n                                <div className=\"flex justify-content-center\" style={{ width: \"100%\" }}><i className=\"fas fa-camera fa-3x\"></i></div>\r\n                                <span >Change Picture</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <input type=\"text\" name=\"greeting\" className=\"input inputHired\" onChange={changeHandler} value={state.greeting} placeholder=\"Greeting\" />\r\n                            <input type=\"text\" name=\"fullName\" className=\"input inputHired\" onChange={changeHandler} value={state.fullName} placeholder=\"Full Name\" />\r\n                        </div>\r\n                        <div className=\"editProfileButton\">\r\n                            <button type=\"submit\" className=\"button primary text-White\">Save</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    editProfile,\r\n    addArts\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\User\\Profile.jsx",["180","181"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Card from '../../components/Home/Card'\r\nimport { follow, getUser } from '../../redux/actions/Auth'\r\n\r\nexport const Profile = ({ Auth, getUser, follow }) => {\r\n\r\n    const compare = (key) => {\r\n        return (a, b) => {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                return 0;\r\n            }\r\n            let comparison = 0;\r\n            if (a[key] < b[key]) {\r\n                comparison = 1;\r\n            }\r\n            if (a[key] > b[key]) {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        };\r\n    };\r\n\r\n    const history = useHistory()\r\n\r\n    const { id } = useParams()\r\n\r\n    const following = async () => {\r\n        if (!Auth.user) {\r\n            return null\r\n        }\r\n        await Auth.user.posts.sort(compare(\"createdAt\"));\r\n        const check = await Auth.userData.following.find(follow => follow.followTo === Number(id))\r\n\r\n        if (!check) {\r\n            return setState(prevState => ({\r\n                ...prevState,\r\n                followed: 0\r\n            }))\r\n        }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            followed: 1\r\n        }))\r\n    }\r\n\r\n    const innitialValue = {\r\n        followed: 0,\r\n    }\r\n    const [state, setState] = React.useState(innitialValue)\r\n\r\n\r\n    React.useEffect(() => {\r\n        getUser(id);\r\n    }, [id])\r\n    React.useEffect(() => {\r\n        following()\r\n    }, [Auth.userData.following, Auth.user])\r\n    const pushHired = () => {\r\n        history.push(`/hired/${Auth.user.id}`)\r\n    }\r\n    const pushEdit = () => {\r\n        history.push(\"/editProfile\")\r\n    }\r\n    const followHandler = () => {\r\n        follow(id)\r\n    }\r\n\r\n    if (!Auth.user) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"bodyProfile\">\r\n                    <div className=\"profileBack\"></div>\r\n                    <div className=\"upperProfileBody flex\">\r\n                        <div className=\"upperProfieLeft\">\r\n                            <div className=\"profilePict\">\r\n                                <img src={Auth.user.avatar ? Auth.user.avatar : \"/logo512.png\"} alt=\"avatar\" className=\"image\" />\r\n                            </div>\r\n                            <div className=\"userDetails\">\r\n                                <span className=\"f-18\" >\r\n                                    <strong>{Auth.user.fullName}</strong>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"userDetails\">\r\n                                <span className=\"f-36\"><strong>\r\n                                    {\r\n                                        Auth.user.greeting\r\n                                    }\r\n                                </strong></span>\r\n                            </div>\r\n                            <div className=\"ProfileButton flex\">\r\n                                {Auth.user.id !== Auth.userData.id ?\r\n                                    <>\r\n                                        {\r\n                                            !state.followed ?\r\n                                                <button className=\"text-black button pointer\" onClick={followHandler} >Follow</button> :\r\n                                                <button className=\"text-black button pointer\" onClick={followHandler} >Unfollow</button>\r\n                                        }\r\n                                        <button onClick={pushHired} className=\"text-white button pointer\" >Hire</button>\r\n                                    </> :\r\n                                    <button onClick={pushEdit} className=\"text-white button editProfile pointer\" >Edit Profile</button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"upperprofileRight\">\r\n                            <div className=\"profilePostContainer\">\r\n                                {\r\n                                    Auth.user.posts.length === 0 ?\r\n                                        null :\r\n                                        <img src={Auth.user.posts[0].photos[0].image} alt=\"Last Post\" className=\"image\" />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"artPage\">\r\n                        <span><strong>\r\n                            {\r\n                                Auth.user.id !== Auth.userData.id ?\r\n                                    \"Geralt Works\" : \"My Works\"\r\n                            }\r\n                        </strong></span>\r\n                        <div className=\"artContainer\">\r\n                            {\r\n                                Auth.user.arts ? Auth.user.arts.map(art => {\r\n                                    return (\r\n                                        <div className=\"photoContainer pointer\" key={art.id} >\r\n                                            <Card image={art.art} postId={art.id} />\r\n                                        </div>\r\n                                    )\r\n                                }) :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getUser,\r\n    follow\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Hired\\Projects\\Project.jsx",["182","183"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport const Project = ({ Hired }) => {\r\n    const { id } = useParams()\r\n    const hiredId = Number(id)\r\n    const copyData = [...Hired.orders]\r\n    const data = copyData.filter(datum => datum.id === hiredId)\r\n\r\n    const [state, setState] = React.useState({\r\n        preview: ''\r\n    })\r\n\r\n    console.log(state);\r\n\r\n    const changePreview = (index) => {\r\n        const previewToBe = data[0].project.photos.findIndex(photo => photo.id === index)\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            preview: data[0].project.photos[previewToBe].photo\r\n        }))\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            preview: data[0].project.photos[0].photo\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"editProfileContainer\">\r\n                <div className=\"addPostLeft \">\r\n                    <div className=\"leftContainer\">\r\n                        <div className=\"projectPreview border\">\r\n                            <img src={state.preview} alt=\"Main Picture\" className=\"image\" />\r\n                        </div>\r\n                        <div className=\"filePreview\">\r\n                            {\r\n                                data[0].project.photos.map((photo, i = 0) => {\r\n                                    i = i + 1;\r\n                                    return (\r\n                                        <div className=\"previewItems pointer\" onClick={() => changePreview(photo.id)} key={i}>\r\n                                            <img src={photo.photo} alt=\"preview\" className=\"image\" />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"projPrevRight\">\r\n                    <span>{data[0].project.description}</span>\r\n                    {/* <div className=\"flex justify-content-center\">\r\n                            <button type=\"submit\" className=\"text-white button primary editProfileButton\" >Send Project</button>\r\n                        </div> */}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Hired: state.Hired\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Project)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Order\\Order.jsx",["184"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Table from '../../components/Order/Table'\r\nimport { loadAllOrders } from '../../redux/actions/Hired'\r\n\r\nexport const Order = ({ Auth, Hired, loadAllOrders }) => {\r\n    const compare = (key) => {\r\n        return (a, b) => {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                return 0;\r\n            }\r\n            let comparison = 0;\r\n            if (a[key] < b[key]) {\r\n                comparison = 1;\r\n            }\r\n            if (a[key] > b[key]) {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        };\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        loadAllOrders(Auth.userData.id)\r\n    }, [])\r\n\r\n    const initialState = {\r\n        options: true\r\n    }\r\n\r\n    const [state, setState] = useState(initialState)\r\n\r\n    const changeHandler = (e) => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            options: e.target.value === \"true\" ? true : false,\r\n        }))\r\n    }\r\n\r\n    if (Hired.loading) {\r\n        return (\r\n            <h1>LOADING.....</h1>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"flex\">\r\n                    <div className=\"headerPartLeft\">\r\n                        <select onChange={changeHandler} name=\"options\" className=\"postSelector\">\r\n                            <option value={true}>My Orders</option>\r\n                            <option value={false}>Offers</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"orderContainer\">\r\n                    <table>\r\n                        <thead className=\"tableHead\">\r\n                            <tr>\r\n                                <th className=\"tableNumber\">No</th>\r\n                                <th>Vendor</th>\r\n                                <th>Order</th>\r\n                                <th>Start Project</th>\r\n                                <th>End Project</th>\r\n                                <th>Status</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                state.options ?\r\n                                    (Hired.orders ?\r\n                                        Hired.orders.sort(compare(\"createdAt\")).map((user, i) => {\r\n                                            i += 1;\r\n                                            return (<Table user={user} userId={Auth.userData.id} counter={i} key={i} />)\r\n                                        }) :\r\n                                        null) :\r\n                                    (Hired.hires ?\r\n                                        Hired.hires.sort(compare(\"createdAt\")).map((user, i) => {\r\n                                            i += 1;\r\n                                            return (<Table user={user} userId={Auth.userData.id} counter={i} key={i} />)\r\n                                        }) :\r\n                                        null)\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Hired: state.Hired,\r\n    Auth: state.Auth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { loadAllOrders })(Order)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Order\\DetailOrder.jsx",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":39,"column":9,"nodeType":"191","messageId":"192","endLine":43,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":46,"column":58,"nodeType":"195","endLine":46,"endColumn":102},{"ruleId":"193","severity":1,"message":"194","line":50,"column":61,"nodeType":"195","endLine":50,"endColumn":105},{"ruleId":"196","severity":1,"message":"197","line":47,"column":15,"nodeType":"198","messageId":"199","endLine":47,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":92,"column":21,"nodeType":"195","endLine":92,"endColumn":66},{"ruleId":"185","replacedBy":"200"},{"ruleId":"187","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":14,"column":42,"nodeType":"204","messageId":"205","endLine":14,"endColumn":44},{"ruleId":"202","severity":1,"message":"203","line":53,"column":32,"nodeType":"204","messageId":"205","endLine":53,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":48,"column":8,"nodeType":"208","endLine":48,"endColumn":45,"suggestions":"209"},{"ruleId":"206","severity":1,"message":"210","line":52,"column":8,"nodeType":"208","endLine":52,"endColumn":10,"suggestions":"211"},{"ruleId":"206","severity":1,"message":"212","line":60,"column":8,"nodeType":"208","endLine":60,"endColumn":21,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":155,"column":21,"nodeType":"195","endLine":155,"endColumn":80},{"ruleId":"193","severity":1,"message":"194","line":170,"column":25,"nodeType":"195","endLine":170,"endColumn":53},{"ruleId":"202","severity":1,"message":"203","line":13,"column":42,"nodeType":"204","messageId":"205","endLine":13,"endColumn":44},{"ruleId":"202","severity":1,"message":"203","line":49,"column":32,"nodeType":"204","messageId":"205","endLine":49,"endColumn":34},{"ruleId":"206","severity":1,"message":"216","line":42,"column":8,"nodeType":"208","endLine":42,"endColumn":10,"suggestions":"217"},{"ruleId":"196","severity":1,"message":"218","line":45,"column":11,"nodeType":"198","messageId":"199","endLine":45,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":18,"column":46,"nodeType":"204","messageId":"205","endLine":18,"endColumn":48},{"ruleId":"206","severity":1,"message":"219","line":26,"column":8,"nodeType":"208","endLine":26,"endColumn":10,"suggestions":"220"},{"ruleId":"206","severity":1,"message":"221","line":60,"column":8,"nodeType":"208","endLine":60,"endColumn":21,"suggestions":"222"},{"ruleId":"206","severity":1,"message":"223","line":56,"column":8,"nodeType":"208","endLine":56,"endColumn":12,"suggestions":"224"},{"ruleId":"206","severity":1,"message":"207","line":59,"column":8,"nodeType":"208","endLine":59,"endColumn":44,"suggestions":"225"},{"ruleId":"206","severity":1,"message":"226","line":30,"column":8,"nodeType":"208","endLine":30,"endColumn":10,"suggestions":"227"},{"ruleId":"214","severity":1,"message":"215","line":38,"column":29,"nodeType":"195","endLine":38,"endColumn":93},{"ruleId":"206","severity":1,"message":"228","line":26,"column":8,"nodeType":"208","endLine":26,"endColumn":10,"suggestions":"229"},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar",["230"],["231"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'following'. Either include it or remove the dependency array.","ArrayExpression",["232"],"React Hook React.useEffect has missing dependencies: 'getPost' and 'id'. Either include them or remove the dependency array. If 'getPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["233"],"React Hook React.useEffect has missing dependencies: 'Posts.loadingPost' and 'Posts.post'. Either include them or remove the dependency array. If 'SetState' needs the current value of 'Posts.post', you can also switch to useReducer instead of useState and read 'Posts.post' in the reducer.",["234"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook React.useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["235"],"'copyPost' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'addArts'. Either include it or remove the dependency array. If 'addArts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],"React Hook React.useEffect has a missing dependency: 'Auth.userData'. Either include it or remove the dependency array. If 'setState' needs the current value of 'Auth.userData', you can also switch to useReducer instead of useState and read 'Auth.userData' in the reducer.",["237"],"React Hook React.useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["238"],["239"],"React Hook React.useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["240"],"React Hook React.useEffect has missing dependencies: 'Auth.userData.id' and 'loadAllOrders'. Either include them or remove the dependency array. If 'loadAllOrders' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["241"],"no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [Auth.userData.following, Posts.post, following]",{"range":"262","text":"263"},"Update the dependencies array to be: [getPost, id]",{"range":"264","text":"265"},"Update the dependencies array to be: [Posts.loadingPost, Posts.post, state.count]",{"range":"266","text":"267"},"Update the dependencies array to be: [getPosts]",{"range":"268","text":"269"},"Update the dependencies array to be: [addArts]",{"range":"270","text":"271"},"Update the dependencies array to be: [Auth.userData, state.count]",{"range":"272","text":"273"},"Update the dependencies array to be: [getUser, id]",{"range":"274","text":"275"},"Update the dependencies array to be: [Auth.userData.following, Auth.user, following]",{"range":"276","text":"277"},"Update the dependencies array to be: [data]",{"range":"278","text":"279"},"Update the dependencies array to be: [Auth.userData.id, loadAllOrders]",{"range":"280","text":"281"},[1339,1376],"[Auth.userData.following, Posts.post, following]",[1515,1517],"[getPost, id]",[1828,1841],"[Posts.loadingPost, Posts.post, state.count]",[1166,1168],"[getPosts]",[789,791],"[addArts]",[1989,2002],"[Auth.userData, state.count]",[1495,1499],"[getUser, id]",[1559,1595],"[Auth.userData.following, Auth.user, following]",[874,876],"[data]",[757,759],"[Auth.userData.id, loadAllOrders]"]