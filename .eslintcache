[{"D:\\AAKerjaaa\\webserver\\finaltask\\src\\index.js":"1","D:\\AAKerjaaa\\webserver\\finaltask\\src\\reportWebVitals.js":"2","D:\\AAKerjaaa\\webserver\\finaltask\\src\\App.js":"3","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\routerLogin\\UserRouter.jsx":"4","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\store\\index.jsx":"5","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Auth.jsx":"6","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\index.jsx":"7","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Auth.jsx":"8","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Landing.jsx":"9","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Landing\\Login.jsx":"10","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Landing\\Register.jsx":"11","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\setAuthToken.jsx":"12","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Header.jsx":"13","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Home.jsx":"14","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Posts.jsx":"15","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Posts.jsx":"16","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\PopUp.jsx":"17","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Home\\Card.jsx":"18","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\DetailPost.jsx":"19","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\EditProfile.jsx":"20","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\PopUp.jsx":"21","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\AddPost.jsx":"22","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Hired.jsx":"23","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Hired.jsx":"24","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Order.jsx":"25","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Order\\Table.jsx":"26","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Profile.jsx":"27","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Dropdown.jsx":"28","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\AddProject.jsx":"29","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Hired.jsx":"30","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Project.jsx":"31","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\PopUps.jsx":"32","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\Loading.jsx":"33","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\ProgressBar.jsx":"34"},{"size":500,"mtime":1608340975799,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":1971,"mtime":1608402458380,"results":"38","hashOfConfig":"36"},{"size":682,"mtime":1608303835219,"results":"39","hashOfConfig":"36"},{"size":394,"mtime":1608010852033,"results":"40","hashOfConfig":"36"},{"size":3325,"mtime":1608402580408,"results":"41","hashOfConfig":"36"},{"size":254,"mtime":1608211661372,"results":"42","hashOfConfig":"36"},{"size":1204,"mtime":1608394494486,"results":"43","hashOfConfig":"36"},{"size":2784,"mtime":1608301851768,"results":"44","hashOfConfig":"36"},{"size":2192,"mtime":1608353687511,"results":"45","hashOfConfig":"36"},{"size":2485,"mtime":1608382448335,"results":"46","hashOfConfig":"36"},{"size":266,"mtime":1608017274759,"results":"47","hashOfConfig":"36"},{"size":2064,"mtime":1608381280153,"results":"48","hashOfConfig":"36"},{"size":3421,"mtime":1608351237498,"results":"49","hashOfConfig":"36"},{"size":1769,"mtime":1608402637977,"results":"50","hashOfConfig":"36"},{"size":763,"mtime":1608350435991,"results":"51","hashOfConfig":"36"},{"size":1054,"mtime":1608302277194,"results":"52","hashOfConfig":"36"},{"size":455,"mtime":1608341436632,"results":"53","hashOfConfig":"36"},{"size":4365,"mtime":1608394703945,"results":"54","hashOfConfig":"36"},{"size":5041,"mtime":1608384623036,"results":"55","hashOfConfig":"36"},{"size":584,"mtime":1608301299469,"results":"56","hashOfConfig":"36"},{"size":4358,"mtime":1608402420299,"results":"57","hashOfConfig":"36"},{"size":3821,"mtime":1608383821051,"results":"58","hashOfConfig":"36"},{"size":2399,"mtime":1608402607752,"results":"59","hashOfConfig":"36"},{"size":2226,"mtime":1608229289782,"results":"60","hashOfConfig":"36"},{"size":2964,"mtime":1608233182775,"results":"61","hashOfConfig":"36"},{"size":4325,"mtime":1608394354304,"results":"62","hashOfConfig":"36"},{"size":1538,"mtime":1608307503527,"results":"63","hashOfConfig":"36"},{"size":1498,"mtime":1608233517936,"results":"64","hashOfConfig":"36"},{"size":875,"mtime":1608229369132,"results":"65","hashOfConfig":"36"},{"size":1131,"mtime":1608231631595,"results":"66","hashOfConfig":"36"},{"size":891,"mtime":1608353704389,"results":"67","hashOfConfig":"36"},{"size":829,"mtime":1608302265810,"results":"68","hashOfConfig":"36"},{"size":1736,"mtime":1608301633359,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1e88b4s",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"D:\\AAKerjaaa\\webserver\\finaltask\\src\\index.js",[],["150","151"],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\reportWebVitals.js",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\App.js",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\routerLogin\\UserRouter.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\store\\index.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Auth.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\index.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Auth.jsx",["152"],"const innitialState = {\r\n    isLogin: false,\r\n    userData: null,\r\n    token: null,\r\n    loading: true,\r\n    user: null,\r\n};\r\n\r\nconst Auth = (state = innitialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case \"LOAD_DATA\": {\r\n            return {\r\n                ...state,\r\n                userData: payload,\r\n                isLogin: true,\r\n                loading: false\r\n            }\r\n        }\r\n        case \"LOGIN\":\r\n            localStorage.setItem(\"token\", payload.token);\r\n            return {\r\n                ...state,\r\n                token: payload.token\r\n            }\r\n        case \"REGISTER\":\r\n            localStorage.setItem(\"token\", payload);\r\n            return {\r\n                ...state,\r\n                token: payload\r\n            }\r\n        case \"GET_USER\":\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case \"LOGOUT\":\r\n            localStorage.removeItem(\"token\");\r\n        case \"AUTH_ERROR\":\r\n            return {\r\n                ...innitialState,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Auth;","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Landing.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Landing\\Login.jsx",["153"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { userLogin } from '../../redux/actions/Auth';\r\n\r\nfunction Login({ onClick, userLogin, changeShow }) {\r\n\r\n    const innitialValue = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const [state, setState] = React.useState(innitialValue)\r\n\r\n    const changeHandler = (e) => {\r\n        setState(prevState => ({ ...prevState, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        userLogin(state);\r\n        onClick()\r\n    }\r\n\r\n    return (\r\n        <div className=\"landingPop\" >\r\n            <div className=\"modalBackground\" onClick={onClick}></div>\r\n            <div className=\"modalContainer\">\r\n                <div className=\"modalCloser pointer\" onClick={onClick}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </div>\r\n                <div className=\"modalTitle\">\r\n                    <span><strong>Login</strong></span>\r\n                </div>\r\n                <div className=\"formContainer\">\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"email\" className=\"input\" name=\"email\" value={state.email} placeholder=\"Email\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"password\" className=\"input\" name=\"password\" value={state.password} placeholder=\"Password\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <button type=\"submit\" className=\"white primary button pointer\">Login</button>\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <span>Dont Have an account ? <a onClick={changeShow} className=\"pointer\"><strong>Click Here</strong></a></span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { userLogin })(Login)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Landing\\Register.jsx",["154"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { userRegister } from '../../redux/actions/Auth';\r\n\r\nfunction Login({ onClick, userRegister, changeShow }) {\r\n\r\n    const innitialValue = {\r\n        email: '',\r\n        password: '',\r\n        fullName: ''\r\n    }\r\n\r\n    const [state, setState] = React.useState(innitialValue)\r\n\r\n    const changeHandler = (e) => {\r\n        setState(prevState => ({ ...prevState, [e.target.name]: e.target.value }))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        userRegister(state);\r\n        onClick()\r\n    }\r\n\r\n    return (\r\n        <div className=\"landingPop\" >\r\n            <div className=\"modalBackground\" onClick={onClick}></div>\r\n            <div className=\"modalContainer\">\r\n                <div className=\"modalCloser pointer\" onClick={onClick}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </div>\r\n                <div className=\"modalTitle\">\r\n                    <span><strong>Register</strong></span>\r\n                </div>\r\n                <div className=\"formContainer\">\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"email\" className=\"input\" name=\"email\" value={state.email} placeholder=\"Email\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"password\" className=\"input\" name=\"password\" value={state.password} placeholder=\"Password\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <input type=\"text\" className=\"input\" name=\"fullName\" value={state.fullName} placeholder=\"Full Name\" onChange={changeHandler} required />\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <button type=\"submit\" className=\"white primary button pointer\">Login</button>\r\n                        </div>\r\n                        <div className=\"modalInput\">\r\n                            <span>Already Have an account ? <a onClick={changeShow} className=\"pointer\"><strong>Click Here</strong></a></span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { userRegister })(Login)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\setAuthToken.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Header.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Home.jsx",["155","156"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Card from '../components/Home/Card'\r\nimport { getPosts } from '../redux/actions/Posts'\r\n\r\nfunction Home({ Posts, getPosts }) {\r\n\r\n    const innitialState = {\r\n        options: 'true',\r\n        search: '',\r\n        message: \"today's posts\"\r\n    }\r\n\r\n    const [state, setState] = useState(innitialState)\r\n\r\n\r\n    const changeHandler = (e) => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value,\r\n            message: (e.target.name === \"options\") ? (e.target.value === \"true\" ? \"today's posts\" : \"all posts\") : \"\"\r\n        }))\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getPosts()\r\n    }, [])\r\n\r\n    let postsToday = []\r\n    const copyPost = Posts.posts ? Posts.posts.map(post => (Date.now() - new Date(post.createdAt).getTime()) < (24 * 60 * 60 * 1000) ? postsToday.push(post) : null) : null;\r\n    const allPosts = Posts.posts\r\n\r\n    const ShowToday = () => {\r\n        return (\r\n            <>\r\n                {\r\n                    postsToday.map(post => {\r\n                        return (\r\n                            <div className=\"photoContainer pointer\" key={post.id}>\r\n                                <Card image={post.photos[0].image} postId={post.id} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    const ShowAll = () => {\r\n        return (\r\n            <>\r\n                {\r\n                    allPosts.map(post => {\r\n                        return (\r\n                            <div className=\"photoContainer pointer\" key={post.id} >\r\n                                <Card image={post.photos[0].image} postId={post.id} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (!Posts.posts) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"flex\">\r\n                    <div className=\"headerPartLeft\">\r\n                        <select onChange={changeHandler} name=\"options\" className=\"postSelector\">\r\n                            <option value={true}>Today</option>\r\n                            <option value={false}>All Posts</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"headerPartRight\">\r\n                        <div className=\"searchBar flex\">\r\n                            <i className=\"fas fa-search\"></i>\r\n                            <input type=\"text\" name=\"search\" placeholder=\"Search\" onChange={changeHandler} value={state.search} className=\"searchInput\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"middleHome\">\r\n                    <span><strong>{state.message}</strong></span>\r\n                </div>\r\n                <div className=\"postContainer\">\r\n                    {\r\n                        state.options === 'true' ? <ShowToday /> : <ShowAll />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        Posts: state.Posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Home)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Posts.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Posts.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\PopUp.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Home\\Card.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\DetailPost.jsx",["157","158","159","160"],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\EditProfile.jsx",["161","162","163"],"import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { addArts, editProfile } from '../redux/actions/Auth'\r\n\r\nexport const EditProfile = ({ Auth, editProfile, addArts }) => {\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const onDrop = useCallback(async acceptedFiles => {\r\n        // Do something with the files\r\n        try {\r\n            const formData = new FormData();\r\n\r\n            const addform = async () => {\r\n                await acceptedFiles.map(file => {\r\n                    formData.append(\"arts\", file)\r\n                })\r\n            }\r\n            addform().then(() => addArts(formData))\r\n        } catch (error) {\r\n\r\n        }\r\n    }, [])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: 'image/*' })\r\n\r\n    const innitialState = {\r\n        art: '',\r\n        avatar: '',\r\n        greeting: '',\r\n        fullName: '',\r\n        count: 0,\r\n        preview: '',\r\n\r\n    }\r\n    const [state, setState] = React.useState(innitialState)\r\n\r\n    const changeHandler = (e) => {\r\n\r\n        setState(prevstate => ({ ...prevstate, [e.target.name]: e.target.value }))\r\n\r\n    }\r\n    const fileHandler = (e) => {\r\n\r\n        setState(prevstate => ({\r\n            ...prevstate,\r\n            [e.target.name]: e.target.files[0] ? e.target.files[0] : '',\r\n            preview: e.target.files[0] ? URL.createObjectURL(e.target.files[0]) : ''\r\n        }))\r\n\r\n    }\r\n    React.useEffect(() => {\r\n        if (!Auth.userData) {\r\n            setState(prevstate => ({ ...prevstate, fullName: Auth.userData ? Auth.userData.fullName : \"\", greeting: Auth.userData ? Auth.userData.greeting : \"\", count: prevstate.count + 1 }))\r\n        } else {\r\n            setState(prevstate => ({ ...prevstate, fullName: Auth.userData ? Auth.userData.fullName : \"\", greeting: Auth.userData ? Auth.userData.greeting : \"\" }))\r\n        }\r\n    }, [state.count])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append(\"fullName\", state.fullName)\r\n        formData.append(\"greeting\", state.greeting)\r\n        formData.append(\"avatar\", state.avatar)\r\n        editProfile(formData).then(() => {\r\n            history.goBack()\r\n        })\r\n    }\r\n\r\n    const textInput = React.createRef();\r\n\r\n    const focusTextInput = () => { textInput.current.click() }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"editProfileContainer\">\r\n                <div className=\"editLeftPart\">\r\n\r\n                    <div {...getRootProps()} className=\"fileDropper\">\r\n                        <input {...getInputProps()} />\r\n                        {\r\n                            isDragActive ?\r\n                                <span className=\"text-primary f-18\">Drop File Here </span> :\r\n                                <>\r\n                                    <span className=\"text-primary f-18\">Upload </span>\r\n                                    <span className=\"text-black f-18 ml-5\"> Your Best Art</span>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"editRightPart\">\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"profileImage\">\r\n                            <img src={state.preview ? state.preview : Auth.userData.avatar ? `http://localhost:5000/uploads/${Auth.userData.avatar}` : '/logo512.png'} alt=\"Profile Pictuce\" className=\"image\" />\r\n                            <input type=\"file\" className=\"input hidden\" ref={textInput} name=\"avatar\" onChange={fileHandler} />\r\n                            <div onClick={focusTextInput} className=\"changePict pointer\">\r\n                                <div className=\"flex justify-content-center\" style={{ width: \"100%\" }}><i className=\"fas fa-camera fa-3x\"></i></div>\r\n                                <span >Change Picture</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <input type=\"text\" name=\"greeting\" className=\"input inputHired\" onChange={changeHandler} value={state.greeting} placeholder=\"Greeting\" />\r\n                            <input type=\"text\" name=\"fullName\" className=\"input inputHired\" onChange={changeHandler} value={state.fullName} placeholder=\"Full Name\" />\r\n                        </div>\r\n                        <div className=\"editProfileButton\">\r\n                            <button type=\"submit\" className=\"button primary text-White\">Save</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    editProfile,\r\n    addArts\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\PopUp.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\AddPost.jsx",["164","165","166"],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Hired.jsx",["167"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { addHired } from '../redux/actions/Hired'\r\n\r\nexport const Hired = ({ addHired }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { id } = useParams()\r\n\r\n    const innitialState = {\r\n        title: '',\r\n        description: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        price: '',\r\n        orderTo: id\r\n    }\r\n    const [state, setState] = React.useState(innitialState)\r\n\r\n    const changeHandler = (e) => {\r\n\r\n        setState(prevstate => ({ ...prevstate, [e.target.name]: e.target.value }))\r\n\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        addHired(state).then(() => {\r\n            history.goBack()\r\n        })\r\n    }\r\n\r\n    const pushBack = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return (\r\n        <div className=\"container hiredContainer\">\r\n            <div className=\"formHiredContainer\">\r\n                <form onSubmit={submitHandler}>\r\n                    <input type=\"text\" className=\"input inputHired\" name=\"title\" onChange={changeHandler} value={state.title} placeholder=\"Title\" required />\r\n                    <textarea type=\"text\" className=\"input textArea inputHired\" name=\"description\" onChange={changeHandler} value={state.description} placeholder=\"Description\" required />\r\n                    <div className=\"flex justify-content-between inputHired\" >\r\n                        <div className=\"leftDate\">\r\n                            <label htmlFor=\"startDate\">Start Date</label>\r\n                            <input type=\"date\" className=\"input inputHired\" id=\"startDate\" name=\"startDate\" onChange={changeHandler} value={state.startDate} placeholder=\"Start Date\" required />\r\n                        </div>\r\n                        <div className=\"rightDate\">\r\n                            <label htmlFor=\"endDate\">End Date</label>\r\n                            <input type=\"date\" className=\"input inputHired\" name=\"endDate\" onChange={changeHandler} value={state.endDate} required />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input type=\"text\" className=\"input price inputHired\" name=\"price\" onChange={changeHandler} value={state.price} placeholder=\"Price\" required />\r\n                    <div className=\"hiredButtons\">\r\n                        <button onClick={pushBack} type=\"reset\" className=\"button text-black\" >Cancel</button>\r\n                        <button type=\"submit\" className=\" button text-white\" >Bidding</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        // <div style={{ margin: \"121px 80px\" }}>\r\n        //     <div className=\"\" style={{ width: \"500px\", padding: \"10px\" }}>\r\n        // <form action=\"\" onSubmit={submitHandler}>\r\n        //     <input type=\"text\" className=\"input\" name=\"title\" onChange={changeHandler} value={state.title} placeholder=\"Title\" />\r\n        //     <input type=\"text\" className=\"input\" name=\"description\" onChange={changeHandler} value={state.description} placeholder=\"Description\" />\r\n        //     <input type=\"date\" className=\"input\" name=\"startDate\" onChange={changeHandler} value={state.startDate} />\r\n        //     <input type=\"date\" className=\"input\" name=\"endDate\" onChange={changeHandler} value={state.endDate} />\r\n        //     <input type=\"text\" className=\"input\" name=\"price\" onChange={changeHandler} value={state.price} placeholder=\"Price\" />\r\n        //     <button type=\"submit\">SUBMIT</button>\r\n        // </form>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addHired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hired)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\actions\\Hired.jsx",["168"],"const { default: Axios } = require(\"axios\");\r\nconst { showPopUp, showProgress, showLoading, closeLoading } = require(\"./PopUp\")\r\n\r\nconst configJson = {\r\n    headers: {\r\n        \"Content-type\": \"application/json\",\r\n    },\r\n};\r\nconst configForm = (dispatch) => ({\r\n    headers: {\r\n        \"Content-type\": \"multipart/form-data\",\r\n    },\r\n    onUploadProgress: (ProgressEvent) => {\r\n        let percentage = Math.round(\r\n            (ProgressEvent.loaded * 100) / ProgressEvent.total\r\n        );\r\n        dispatch(showProgress(percentage));\r\n    },\r\n});\r\nconst baseUrl = 'http://localhost:5000/api/v1'\r\n\r\nexport const loadAllOrders = (data) => async dispatch => {\r\n    try {\r\n        dispatch(showLoading())\r\n        const result = await Axios.get(`${baseUrl}/hired`, configJson)\r\n        dispatch({\r\n            type: \"LOAD_ALL_ORDER\",\r\n            payload: result.data.data.orders\r\n        })\r\n        dispatch({\r\n            type: \"LOAD_ORDER\",\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: \"LOAD_HIRE\",\r\n            payload: data\r\n        })\r\n        dispatch(closeLoading())\r\n    } catch (error) {\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(error.response.data.message))\r\n    }\r\n}\r\nexport const addHired = (data) => async dispatch => {\r\n    try {\r\n        dispatch(showLoading())\r\n        const result = await Axios.post(`${baseUrl}/hired`, data, configJson)\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(\"We have sent your offer, please wait for the user to accept it\"))\r\n    } catch (error) {\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(error.response.data.message))\r\n    }\r\n}\r\nexport const hiredAction = (data, id) => async dispatch => {\r\n    try {\r\n        dispatch(showLoading())\r\n        const result = await Axios.patch(`${baseUrl}/hired`, data, configJson)\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(result.data.message))\r\n        dispatch(loadAllOrders(id))\r\n    } catch (error) {\r\n        dispatch(closeLoading())\r\n        dispatch(showPopUp(error.response.data.message))\r\n    }\r\n}\r\nexport const submitProject = (data) => async dispatch => {\r\n    try {\r\n        const result = await Axios.post(`${baseUrl}/project`, data, configForm(dispatch))\r\n        dispatch(showPopUp(result.data.message))\r\n    } catch (error) {\r\n        dispatch(showPopUp(error.response.data.message))\r\n    }\r\n}","D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Order.jsx",["169"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Table from '../components/Order/Table'\r\nimport { loadAllOrders } from '../redux/actions/Hired'\r\n\r\nexport const Order = ({ Auth, Hired, loadAllOrders }) => {\r\n\r\n    React.useEffect(() => {\r\n        loadAllOrders(Auth.userData.id)\r\n    }, [])\r\n\r\n    const initialState = {\r\n        status: true\r\n    }\r\n\r\n    const [state, setState] = useState(initialState)\r\n\r\n    const clickHandler = (get) => {\r\n        setState(prevstate => ({ status: get }))\r\n    }\r\n\r\n    if (Hired.loading) {\r\n        return (\r\n            <h1>LOADING.....</h1>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={{ margin: \"121px 80px\" }}>\r\n                <div className=\"\">\r\n                    <button onClick={() => clickHandler(true)}>My Orders</button>\r\n                    <button onClick={() => clickHandler(false)}>Offers</button>\r\n                </div>\r\n                <table className=\"\">\r\n                    <thead className=\"text-success\">\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>Vendor</th>\r\n                            <th>Order</th>\r\n                            <th>Start Project</th>\r\n                            <th>End Project</th>\r\n                            <th>Status</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {state.status ? (Hired.orders ? Hired.orders.map((user, i) => {\r\n                            i += 1;\r\n                            return (<Table user={user} userId={Auth.userData.id} counter={i} key={i} />)\r\n                        }) : \"\") : (Hired.hires ? Hired.hires.map((user, i) => {\r\n                            i += 1;\r\n                            return (<Table user={user} userId={Auth.userData.id} counter={i} key={i} />)\r\n                        }) : \"\")}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Hired: state.Hired,\r\n    Auth: state.Auth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { loadAllOrders })(Order)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Order\\Table.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Profile.jsx",["170","171"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Card from '../components/Home/Card'\r\nimport { getUser } from '../redux/actions/Auth'\r\n\r\nexport const Profile = ({ Auth, getUser }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { id } = useParams()\r\n\r\n    React.useEffect(() => {\r\n        getUser(id);\r\n    }, [id])\r\n\r\n    const pushHired = () => {\r\n        history.push(`/hired/${Auth.user.id}`)\r\n    }\r\n    const pushEdit = () => {\r\n        history.push(\"/editProfile\")\r\n    }\r\n\r\n    if (!Auth.user) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"bodyProfile\">\r\n                    <div className=\"profileBack\"></div>\r\n                    <div className=\"upperProfileBody flex\">\r\n                        <div className=\"upperProfieLeft\">\r\n                            <div className=\"profilePict\">\r\n                                <img src={Auth.user.avatar ? `http://localhost:5000/uploads/${Auth.user.avatar}` : \"/logo512.png\"} alt=\"avatar\" className=\"image\" />\r\n                            </div>\r\n                            <div className=\"userDetails\">\r\n                                <span className=\"f-18\" >\r\n                                    <strong>{Auth.user.fullName}</strong>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"userDetails\">\r\n                                <span className=\"f-36\"><strong>\r\n                                    {\r\n                                        Auth.user.greeting\r\n                                    }\r\n                                </strong></span>\r\n                            </div>\r\n                            <div className=\"ProfileButton flex\">\r\n                                {Auth.user.id !== Auth.userData.id ?\r\n                                    <>\r\n                                        <button className=\"text-black button pointer\">Follow</button>\r\n                                        <button onClick={pushHired} className=\"text-white button pointer\" >Hire</button>\r\n                                    </> :\r\n                                    <button onClick={pushEdit} className=\"text-white button editProfile pointer\" >Edit Profile</button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"upperprofileRight\">\r\n                            <div className=\"profilePostContainer\">\r\n                                {\r\n                                    Auth.user.posts.length === 0 ?\r\n                                        null :\r\n                                        <img src={`http://localhost:5000/uploads/${Auth.user.posts[0].photos[0].image}`} alt=\"Last Post\" className=\"image\" />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"artPage\">\r\n                        <span><strong>\r\n                            {\r\n                                Auth.user.id !== Auth.userData.id ?\r\n                                    \"Geralt Works\" : \"My Works\"\r\n                            }\r\n                        </strong></span>\r\n                        <div className=\"artContainer\">\r\n                            {\r\n                                Auth.user.arts ? Auth.user.arts.map(art => {\r\n                                    return (\r\n                                        <div className=\"photoContainer pointer\" key={art.id} >\r\n                                            <Card image={art.art} postId={art.id} />\r\n                                        </div>\r\n                                    )\r\n                                }) :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Auth: state.Auth\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\Dropdown.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\AddProject.jsx",["172"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { submitProject } from '../redux/actions/Hired'\r\n\r\nexport const AddProject = ({ submitProject }) => {\r\n\r\n    const { id } = useParams()\r\n\r\n    const [state, setState] = React.useState({\r\n        description: '',\r\n        file: [],\r\n    })\r\n\r\n    const changeHanler = (e) => {\r\n\r\n        setState(prevstate => ({ ...prevstate, [e.target.name]: e.target.files ? [...prevstate.file, e.target.files[0]] : e.target.value }))\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append(\"description\", state.description)\r\n        formData.append(\"hiredId\", id)\r\n        await state.file.map(photos => formData.append(\"photos\", photos))\r\n        submitProject(formData)\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ margin: \"121px 80px\" }}>\r\n            <form action=\"\" onSubmit={submitHandler}>\r\n                <input type=\"file\" name=\"file\" onChange={changeHanler} />\r\n                <input type=\"text\" name=\"description\" onChange={changeHanler} placeholder=\"Description\" value={state.description} />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    submitProject\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProject)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\redux\\reducers\\Hired.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\pages\\Project.jsx",["173"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport const Project = ({ Hired }) => {\r\n    const { id } = useParams()\r\n    const hiredId = Number(id)\r\n    const copyData = [...Hired.orders]\r\n    const data = copyData.filter(datum => datum.id === hiredId)\r\n\r\n\r\n    return (\r\n        <div style={{ margin: \"121px 80px\" }}>\r\n            <div className=\"border\">\r\n                <h1>{data[0].title}</h1>\r\n                <h3>{data[0].project.description}</h3>\r\n                {data[0].project.photos.map(photo => {\r\n                    return (\r\n                        <div className=\"\" style={{ width: \"200px\", height: \"auto\" }}>\r\n                            <img src={`http://localhost:5000/uploads/${photo.photo}`} alt=\"\" className=\"image\" />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    Hired: state.Hired\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Project)\r\n","D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\PopUps.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\Loading.jsx",[],"D:\\AAKerjaaa\\webserver\\finaltask\\src\\components\\PopUps\\ProgressBar.jsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":39,"column":9,"nodeType":"180","messageId":"181","endLine":43,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":46,"column":58,"nodeType":"184","endLine":46,"endColumn":102},{"ruleId":"182","severity":1,"message":"183","line":50,"column":61,"nodeType":"184","endLine":50,"endColumn":105},{"ruleId":"185","severity":1,"message":"186","line":27,"column":8,"nodeType":"187","endLine":27,"endColumn":10,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":30,"column":11,"nodeType":"191","messageId":"192","endLine":30,"endColumn":19},{"ruleId":"185","severity":1,"message":"193","line":21,"column":8,"nodeType":"187","endLine":21,"endColumn":10,"suggestions":"194"},{"ruleId":"185","severity":1,"message":"195","line":29,"column":8,"nodeType":"187","endLine":29,"endColumn":21,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":79,"column":21,"nodeType":"184","endLine":79,"endColumn":115},{"ruleId":"182","severity":1,"message":"183","line":94,"column":25,"nodeType":"184","endLine":94,"endColumn":53},{"ruleId":"199","severity":1,"message":"200","line":18,"column":46,"nodeType":"201","messageId":"202","endLine":18,"endColumn":48},{"ruleId":"185","severity":1,"message":"203","line":26,"column":8,"nodeType":"187","endLine":26,"endColumn":10,"suggestions":"204"},{"ruleId":"185","severity":1,"message":"205","line":60,"column":8,"nodeType":"187","endLine":60,"endColumn":21,"suggestions":"206"},{"ruleId":"189","severity":1,"message":"207","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":15,"column":42,"nodeType":"201","messageId":"202","endLine":15,"endColumn":44},{"ruleId":"199","severity":1,"message":"200","line":54,"column":32,"nodeType":"201","messageId":"202","endLine":54,"endColumn":34},{"ruleId":"189","severity":1,"message":"207","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"208","line":47,"column":15,"nodeType":"191","messageId":"192","endLine":47,"endColumn":21},{"ruleId":"185","severity":1,"message":"209","line":10,"column":8,"nodeType":"187","endLine":10,"endColumn":10,"suggestions":"210"},{"ruleId":"189","severity":1,"message":"207","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"211","line":15,"column":8,"nodeType":"187","endLine":15,"endColumn":12,"suggestions":"212"},{"ruleId":"189","severity":1,"message":"207","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"207","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":26},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["215"],"no-unused-vars","'copyPost' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has missing dependencies: 'getPost' and 'id'. Either include them or remove the dependency array. If 'getPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["216"],"React Hook React.useEffect has missing dependencies: 'Posts.loadingPost' and 'Posts.post'. Either include them or remove the dependency array. If 'SetState' needs the current value of 'Posts.post', you can also switch to useReducer instead of useState and read 'Posts.post' in the reducer.",["217"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useCallback has a missing dependency: 'addArts'. Either include it or remove the dependency array. If 'addArts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["218"],"React Hook React.useEffect has a missing dependency: 'Auth.userData'. Either include it or remove the dependency array. If 'setState' needs the current value of 'Auth.userData', you can also switch to useReducer instead of useState and read 'Auth.userData' in the reducer.",["219"],"'Component' is defined but never used.","'result' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'Auth.userData.id' and 'loadAllOrders'. Either include them or remove the dependency array. If 'loadAllOrders' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["220"],"React Hook React.useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["221"],"no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [getPosts]",{"range":"236","text":"237"},"Update the dependencies array to be: [getPost, id]",{"range":"238","text":"239"},"Update the dependencies array to be: [Posts.loadingPost, Posts.post, state.count]",{"range":"240","text":"241"},"Update the dependencies array to be: [addArts]",{"range":"242","text":"243"},"Update the dependencies array to be: [Auth.userData, state.count]",{"range":"244","text":"245"},"Update the dependencies array to be: [Auth.userData.id, loadAllOrders]",{"range":"246","text":"247"},"Update the dependencies array to be: [getUser, id]",{"range":"248","text":"249"},[735,737],"[getPosts]",[585,587],"[getPost, id]",[898,911],"[Posts.loadingPost, Posts.post, state.count]",[786,788],"[addArts]",[1986,1999],"[Auth.userData, state.count]",[324,326],"[Auth.userData.id, loadAllOrders]",[413,417],"[getUser, id]"]